name: ci

on:
    push:
        branches:
            - master
            - develop
    pull_request:
        branches:
            - master

jobs:
    linux:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-20.04, ubuntu-22.04]
                cpp-version: [gcc, clang]
        steps:
            - uses: actions/checkout@v3
              with:
                  submodules: recursive
            - run: sudo apt-get install -y ${{ matrix.cpp-version }} -y autoconf automake libtool m4 make pkg-config libjson-c-dev libyaml-dev
            - run: autoreconf -fiv
            - run: ./configure
            - run: make
            - run: make check
            - run: make distcheck

    nix-matrix:
        runs-on: ubuntu-latest
        outputs:
            matrix: ${{ steps.set-matrix.outputs.matrix }}
        steps:
            - uses: actions/checkout@v4
            - uses: cachix/install-nix-action@v27
              with:
                  extra_nix_config: "system-features = nixos-test benchmark big-parallel kvm"
                  nix_path: nixpkgs=channel:nixos-24.05
            - id: set-matrix
              name: Generate Nix Matrix
              run: |
                  set -Eeu
                  matrix="$(nix eval --json '.#githubActions.matrix')"
                  echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

    nix:
        name: "nix (${{ matrix.name }})"
        runs-on: ${{ matrix.os }}
        needs: nix-matrix
        strategy:
            matrix: ${{fromJSON(needs.nix-matrix.outputs.matrix)}}
        steps:
            - uses: actions/checkout@v4

            - name: Set Up Build Cache
              uses: actions/cache@v4
              id: nix-cache
              with:
                  path: /tmp/nix-store.nar
                  key: nix-store.nar-${{ runner.os }}-${{ hashFiles('flake.lock') }}-${{ matrix.attr }}
                  restore-keys: |
                      nix-store.nar-${{ runner.os }}-${{ hashFiles('flake.lock') }}-${{ matrix.attr }}
                      nix-store.nar-${{ runner.os }}-${{ hashFiles('flake.lock') }}-
                      nix-store.nar-${{ runner.os }}-

            - uses: cachix/install-nix-action@v27
              with:
                  nix_path: nixpkgs=channel:nixos-24.05
                  extra_nix_config: "system-features = nixos-test benchmark big-parallel kvm"

            - name: Import Nix Store Cache
              if: "steps.nix-cache.outputs.cache-hit == 'true'"
              run: |
                  nix-store --import < /tmp/nix-store.nar

            - run: nix build -L ".#${{ matrix.attr }}"

            - name: Export Nix Store Cache
              shell: bash
              # partially based on https://github.com/NixOS/nix/issues/1245#issuecomment-282586759
              run: |
                  drv="$(nix-store -qd "$(readlink result)")"
                  drvRefs="$( echo "$drv" | xargs nix-store -q --references )"
                  ( echo "$drvRefs" | grep '[.]drv$' | xargs nix-store -q --outputs ;
                    echo "$drvRefs" | grep -v '[.]drv$' ) | \
                      xargs nix-store -r | \
                      xargs nix-store -qR |
                      xargs nix-store --export > /tmp/nix-store.nar
